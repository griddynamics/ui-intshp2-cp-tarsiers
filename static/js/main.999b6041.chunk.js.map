{"version":3,"sources":["app/components/Header/Header.js","app/components/Footer/Footer.js","app/components/ProductListPage/ProductListPage.js","app/components/ProductDetailsPage/ProductDetailsPage.js","app/components/HomePage/HomePage.js","app/components/404Component/404Component.js","app/routes/routeSchema.js","app/components/Content/Content.js","app/App.js","serviceWorker.js","app/reducers/counter.js","app/reducers/index.js","app/actions/index.js","configStore.js","index.js"],"names":["Header","props","visible","react_default","a","createElement","className","Link","to","Footer","ProductsListPage","_ref","match","concat","url","ProductDetailsPage","params","productId","HomePage","My404Component","Object","classCallCheck","this","_len","arguments","length","Array","_key","possibleConstructorReturn","getPrototypeOf","call","toggleHeaderAndFooterVisibility","Component","RouteSchema","Switch","Route","exact","path","component","ProductListPage","render","_404Component","Content","routeSchema","App","_this","headerAndFooterVisible","state","setState","BrowserRouter","HashRouter","components_Header_Header","components_Content_Content","components_Footer_Footer","Boolean","window","location","hostname","initialState","value","combineReducers","counter","undefined","type","objectSpread","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","apply","rootElement","document","getElementById","ReactDOM","es","app_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.999b6041.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Header = props => {\n  const { visible } = props;\n  return visible ? (\n    <header className=\"jc-center flx\">\n      <h1>Header</h1>\n      <ul>\n        <li>\n          <Link to=\"/\">Home</Link>\n        </li>\n        <li>\n          <Link to=\"/products\">Products</Link>\n        </li>\n        <li>\n          <Link to=\"/aadkjl\">Under construction</Link>\n        </li>\n      </ul>\n    </header>\n  ) : null;\n};\n\nexport default Header;\n","import React from \"react\";\n\nconst Footer = (props) => {\n    return (props.visible) ? <footer className =\"jc-center flx\"><h2>footer</h2></footer> : null;\n}\n\nexport default Footer;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst ProductsListPage = ({ match }) => {\n\n    return (\n        <div>\n            <h2>Choose your product</h2>\n            <ul>\n                <li>\n                <Link to={`${match.url}/1`}>Product 1</Link>\n                </li>\n                <li>\n                <Link to={`${match.url}/2`}>Product 2</Link>\n                </li>\n                <li>\n                <Link to={`${match.url}/3`}>Product 3</Link>\n                </li>\n            </ul>\n        </div>\n    );\n}\n\nexport default ProductsListPage;\n","import React from \"react\";\n\nconst ProductDetailsPage = ({ match }) => {\n    return (\n      <div>\n        <h3>{ match.params.productId }</h3>\n      </div>\n    )\n}\n\nexport default ProductDetailsPage;\n","import React from 'react';\n\nfunction HomePage() {\n    return <div>Home</div>;\n}\n\nexport default HomePage;\n","import React, { Component } from 'react';\n\nclass My404Component extends Component {\n  constructor(...props) {\n    super(props);\n  }\n\n  componentWillMount() {\n    const { toggleHeaderAndFooterVisibility } = this.props;\n    toggleHeaderAndFooterVisibility();\n  }\n\n  componentWillUnmount() {\n    const { toggleHeaderAndFooterVisibility } = this.props;\n    toggleHeaderAndFooterVisibility();\n  }\n\n  render() {\n    return <div>Page is not found</div>;\n  }\n}\nexport default My404Component;\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport ProductListPage from '../components/ProductListPage/ProductListPage';\nimport ProductDetailsPage from '../components/ProductDetailsPage/ProductDetailsPage';\nimport HomePage from '../components/HomePage/HomePage';\nimport My404Component from '../components/404Component/404Component';\n\nconst RouteSchema = props => (\n  <div className=\"flx jc-center\">\n    <Switch>\n      <Route exact path=\"/products\" component={ProductListPage} />\n      <Route exact path=\"/\" component={HomePage} />\n      <Route path=\"/products/:productId\" component={ProductDetailsPage} />\n      <Route\n        path=\"*\"\n        exact\n        render={() => <My404Component toggleHeaderAndFooterVisibility={props.toggleHeaderAndFooterVisibility} />}\n      />\n    </Switch>\n  </div>\n);\n\nexport default RouteSchema;\n","import React from \"react\";\nimport RouteSchema from \"../../routes/routeSchema\"\n\nconst Content = props => {\n  return (\n    <RouteSchema toggleHeaderAndFooterVisibility = {props.toggleHeaderAndFooterVisibility}/>\n  );\n};\n\nexport default Content;\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, HashRouter } from 'react-router-dom';\nimport Header from './components/Header/Header';\nimport Footer from './components/Footer/Footer';\nimport Content from './components/Content/Content';\nimport '../styles/index.scss';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      headerAndFooterVisible: true\n    };\n  }\n\n  toggleHeaderAndFooterVisibility = () => {\n    const { headerAndFooterVisible } = this.state;\n    this.setState({\n      headerAndFooterVisible: !headerAndFooterVisible\n    });\n  };\n\n  render() {\n    const { headerAndFooterVisible } = this.state;\n    return (\n      <Router>\n        <div>\n          <HashRouter>\n            <div>\n              <Header visible={headerAndFooterVisible} />\n              <Content className=\"content\" toggleHeaderAndFooterVisibility={this.toggleHeaderAndFooterVisibility} />\n              <Footer visible={headerAndFooterVisible} />\n            </div>\n          </HashRouter>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      // eslint-disable-next-line\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { ADD_TO_CART, REMOVE_FROM_CART } from '../actions';\n\nconst initialState = {\n  value: 0\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_TO_CART:\n      return {\n        ...state,\n        value: state.value + 1\n      };\n    case REMOVE_FROM_CART:\n      return {\n        ...state,\n        value: state.value ? state.value + 1 : 0\n      };\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from 'redux';\nimport counter from './counter';\n\nexport default combineReducers({\n  counter\n});\n","export const ADD_TO_CART = 'ADD_TO_CART';\nexport const REMOVE_FROM_CART = 'REMOVE_FROM_CART';\n","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport rootReducer from './app/reducers';\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport './styles/index.scss';\nimport App from './app/App';\nimport * as serviceWorker from './serviceWorker';\nimport store from './configStore';\n\nconst rootElement = document.getElementById('root');\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  rootElement\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}